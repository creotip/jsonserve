# Use the Rust base image
FROM rust:latest as builder

# Set the working directory inside the container
WORKDIR /usr/src/upload_service

# Copy the Rocket project files into the container
COPY . .

# Build the Rust project
RUN cargo build --release

# Start a new build stage from a slim Debian base
FROM debian:testing-slim

# Set the working directory inside the container
WORKDIR /usr/src/upload_service

# Create a non-root user and group to run the service with a specific home directory
RUN groupadd -r uploadservice && \
    useradd -r -g uploadservice -d /home/uploadservice -m uploadservice

# Create a directory for uploads
RUN mkdir -p /usr/src/upload_service/uploads

# Set permissions for the uploads directory
RUN chown uploadservice:uploadservice /usr/src/upload_service/uploads

# Copy the built binary from the previous stage
COPY --from=builder /usr/src/upload_service/target/release/upload_service .

# Ensure the home directory permissions are set correctly
RUN chown -R uploadservice:uploadservice /home/uploadservice

# Use the non-root user to run your application
USER uploadservice

# Expose the port that your Rocket server listens on
EXPOSE 8000

# Command to run the Rocket server
CMD ["./upload_service"]
